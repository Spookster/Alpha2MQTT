[{"id":"3b99b42732a15afe","type":"tab","label":"Alpha Charge TOU","disabled":false,"info":"","env":[]},{"id":"a9b70933afb2f1c3","type":"mqtt in","z":"3b99b42732a15afe","name":"Ten Second Status","topic":"Alpha2MQTT/state/second/ten","qos":"2","datatype":"auto-detect","broker":"22e024772e711f4f","nl":false,"rap":true,"rh":0,"inputs":0,"x":150,"y":200,"wires":[["1497c3d02e47900a","309419138c4c05d5"]]},{"id":"1497c3d02e47900a","type":"function","z":"3b99b42732a15afe","name":"Format","func":"var blnError = false;\nvar dispatchStart = msg.payload.REG_DISPATCH_RW_DISPATCH_START;\nvar batterySOC = msg.payload.REG_BATTERY_HOME_R_SOC;\nvar triggerMQTT = \"\";\n\n\nif (!blnError) {\n    var currentDateTime = new Date();\n    var currentTime = new Date(0, 0, 0, currentDateTime.getHours(), currentDateTime.getMinutes(), currentDateTime.getSeconds(), 0);\n    \n    // Enter Charge Period Start Time And End Time Here\n    // This is a period where we will check to see if dispatch mode needs to be kicked in.\n    // For example, for five minutes between 00:35 and 00:40 we will seek to enable dispatch mode\n    // If it hasn't already been enabled.\n    var chargePeriodStartTime = new Date(0, 0, 0, 0, 35, 0, 0);\n    var chargePeriodEndTime = new Date(0, 0, 0, 0, 40, 0, 0);\n    if (chargePeriodEndTime <= chargePeriodStartTime)\n    {\n        chargePeriodEndTime.setHours(chargePeriodEndTime.getHours() + 24);\n    }\n\n    // Are we within the check period?\n    if (currentTime >= chargePeriodStartTime && currentTime <= chargePeriodEndTime)\n    {\n        // OK all good, so, is dispatch started?  If not, trigger a Charge to be picked up later\n        // in the flow.\n        if (dispatchStart == \"Stop\")\n        {\n            // Fire off the start\n            triggerMQTT = \"Charge\";\n        }\n    }\n}\n\n\nmsg.payload = triggerMQTT;\n\n\nif (!blnError) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"\" })\n    setTimeout(() => { node.status({}); }, 3000);\n    return msg;\n}\nelse {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"\" })\n    setTimeout(() => { node.status({}); }, 3000);\n    msg = null;\n    throw new Error('Spurious Data');\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":360,"y":360,"wires":[["8ce01a630baf0151","d8657aeace5325ee"]]},{"id":"8ce01a630baf0151","type":"debug","z":"3b99b42732a15afe","name":"Raw Output","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":710,"y":280,"wires":[]},{"id":"d8657aeace5325ee","type":"switch","z":"3b99b42732a15afe","name":"What To Do","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"Charge","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":370,"y":480,"wires":[["a526e489853afe82","4a7633f889170ba7"]],"info":"1 = Auto\r\n2 = Charge\r\n3 = Standby"},{"id":"a526e489853afe82","type":"debug","z":"3b99b42732a15afe","name":"Charge","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":740,"y":380,"wires":[]},{"id":"c37112aa5af6e381","type":"mqtt out","z":"3b99b42732a15afe","name":"Set Charge Mode","topic":"Alpha2MQTT/request/set/charge","qos":"0","retain":"false","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"22e024772e711f4f","x":810,"y":560,"wires":[]},{"id":"4a7633f889170ba7","type":"change","z":"3b99b42732a15afe","name":"Set payload charge rate and duration","rules":[{"t":"set","p":"payload","pt":"msg","to":"{\"watts\":1000,\"socPercent\":100,\"duration\":600}","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":510,"y":660,"wires":[["c37112aa5af6e381","6d3c0c5fb6194f70"]]},{"id":"6d3c0c5fb6194f70","type":"debug","z":"3b99b42732a15afe","name":"Charge Payload","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":780,"y":700,"wires":[]},{"id":"309419138c4c05d5","type":"debug","z":"3b99b42732a15afe","name":"Raw Input","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":420,"y":240,"wires":[]},{"id":"79f3d090b4f7858d","type":"comment","z":"3b99b42732a15afe","name":"Read and set the start time of your charge period in 'Format'","info":"","x":280,"y":100,"wires":[]},{"id":"e81128444c8c83e0","type":"comment","z":"3b99b42732a15afe","name":"Set watts to charge at, target SOC and duration in 'Set payload charge rate and duration'","info":"","x":360,"y":140,"wires":[]},{"id":"22e024772e711f4f","type":"mqtt-broker","name":"Mosquitto Broker","broker":"192.168.1.135","port":"1883","clientid":"","autoConnect":true,"usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willPayload":"","willMsg":{},"userProps":"","sessionExpiry":""}]